extend schema @link(url: "https://specs.apollographql.com/federation/v2.0", import: ["@key", "external"])
scalar Time

type Order @key(fields: "id") {
  id: ID!
  userId: ID!
  productId: ID!
  quantity: Int!
  totalPrice: Float!
  status: String!
  createdAt: Time!
}

extend type User @key(fields: "id") {
  id: ID! @external
  orders: [Order]
}

type Query {
  orders: [Order!]!
  order(id: ID!): Order
  ordersByUser(userId: ID!): [Order!]!
}

input CreateOrderInput {
  userId: ID!
  productId: ID!
  quantity: Int!
  totalPrice: Float!
  status: String!
  createdAt: Time!
}

input UpdateOrderInput {
  orderId: ID!
  quantity: Int
  totalPrice: Float
  status: String
}

input DeleteOrderInput {
  orderId: ID!
  userId: ID!
}

input SetOrderStatusInput {
  orderId: ID!
  status: String!
}

input ChangeOrderQuantityInput {
  orderId: ID!
  quantity: Int!
}

type Mutation {
  createOrder(input: CreateOrderInput!): Order!
  updateOrder(input: UpdateOrderInput!): Order!
  deleteOrder(input: DeleteOrderInput!): Boolean!
  setOrderStatus(input: SetOrderStatusInput!): Order!
  changeOrderQuantity(input: ChangeOrderQuantityInput!): Order!
}
