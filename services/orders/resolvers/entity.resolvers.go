package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"
	"fmt"

	"github.com/tagaertner/e-commerce/services/orders/generated"
)

// FindOrderByID is the resolver for the findOrderByID field.
func (r *entityResolver) FindOrderByID(ctx context.Context, id string) (*generated.Order, error) {
	order := r.OrderService.GetOrderByID(id)
	if order == nil {
		return nil, fmt.Errorf("order not found")
	}
	return order, nil
}

// FindUserByID is the resolver for the findUserByID field.
func (r *entityResolver) FindUserByID(ctx context.Context, id string) (*generated.User, error) {
	// You'll need to add this method to your service
	user := r.OrderService.GetUserByID(id)
	return user, nil
}

// Entity returns generated.EntityResolver implementation.
func (r *Resolver) Entity() generated.EntityResolver { return &entityResolver{r} }

type entityResolver struct{ *Resolver }
