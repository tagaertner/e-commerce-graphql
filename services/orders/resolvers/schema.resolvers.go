package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.75

import (
	"context"
	"fmt"

	"github.com/tagaertner/e-commerce/services/orders/generated"
)

// Orders is the resolver for the orders field.
func (r *queryResolver) Orders(ctx context.Context) ([]*generated.Order, error) {
	return r.OrderService.GetAllOrders(), nil
}

// Order is the resolver for the order field.
func (r *queryResolver) Order(ctx context.Context, id string) (*generated.Order, error) {
	order := r.OrderService.GetOrderByID(id)
	if order == nil {
		return nil, fmt.Errorf("order not found")
	}
	return order, nil
}

// OrdersByUser is the resolver for the ordersByUser field.
func (r *queryResolver) OrdersByUser(ctx context.Context, userID string) ([]*generated.Order, error) {
	return r.OrderService.GetOrdersByUserID(userID), nil
}

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
